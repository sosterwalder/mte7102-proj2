@book{wikipedia_foundation_zotero_2015,
	title = {Zotero},
	url = {https://de.wikipedia.org/wiki/Zotero},
	author = {{Wikipedia Foundation}},
	date = {2015-08},
	note = {Published: Website Abgerufen am 27. September 2015}
}

@article{hart_ray_1989,
	title = {Ray {Tracing} {Deterministic} 3-{D} {Fractals}},
	volume = {23},
	issn = {0097-8930},
	url = {http://doi.acm.org/10.1145/74334.74363},
	doi = {10.1145/74334.74363},
	number = {3},
	journal = {SIGGRAPH Comput. Graph.},
	author = {Hart, J. C. and Sandin, D. J. and Kauffman, L. H.},
	month = jul,
	year = {1989},
	pages = {289--296}
}

@article{hart_ray_1993,
	title = {Ray tracing implicit surfaces},
	pages = {1--16},
	journaltitle = {Siggraph 93 Course Notes: Design, Visualization and Animation of Implicit Surfaces},
	author = {Hart, John C},
	date = {1993}
}

@book{wikipedia_the_free_encyclopedia_boost_2015,
	title = {Boost (C++-Bibliothek)},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://de.wikipedia.org/w/index.php?title=Boost_(C++-Bibliothek)},
	abstract = {Boost (englisch Boost C++ Libraries) ist eine freie C++-Bibliothek, die aus einer Vielzahl von portablen Unterbibliotheken besteht. Die Unterbibliotheken dienen unterschiedlichsten Aufgaben von Algorithmen auf Graphen über Metaprogrammierung bis hin zu Speicherverwaltung. Es können jederzeit neue Bibliotheken zur Eingliederung in Boost vorgeschlagen werden, diese müssen jedoch einen aufwendigen Review-Prozess durchlaufen. Teile von Boost wurden in einen so genannten technischen Bericht (technical report) des Standardisierungskomitees für C++ übernommen und später in die Sprache C++ integriert ({ISO}/{IEC} 14882:2011). ↑ Boost Version History ↑ Boost Software License: Text der Version 1.0, Erläuterungen zur Lizenz ↑ Review Prozess für Boost-Bibliotheken ↑ C++ Technical Report 1 ({PDF}-Datei; 1,37 {MB})},
	author = {{Wikipedia, the free encyclopedia}},
	urldate = {2015-10-31},
	date = {2015-09},
	langid = {german},
	note = {Page Version {ID}: 146313866}
}

@book{wikipedia_the_free_encyclopedia_opengl_2015,
	title = {{OpenGL}},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://de.wikipedia.org/w/index.php?title=OpenGL},
	abstract = {{OpenGL} (Open Graphics Library; deutsch Offene Grafikbibliothek) ist eine Spezifikation für eine plattform- und programmiersprachenunabhängige Programmierschnittstelle zur Entwicklung von 2D- und 3D- Computergrafikanwendungen. Der {OpenGL}-Standard beschreibt etwa 250 Befehle, die die Darstellung komplexer 3D-Szenen in Echtzeit erlauben. Zudem können andere Organisationen (zumeist Hersteller von Grafikkarten) proprietäre Erweiterungen definieren. Die Implementierung des {OpenGL}-{API} erfolgt in der Regel durch Systembibliotheken, auf einigen Betriebssystemen auch als Teil der Grafikkarten-Treiber. Diese führen entsprechend Befehle der Grafikkarte aus, insbesondere müssen auf der Grafikkarte nicht vorhandene Funktionen durch die {CPU} emuliert werden.},
	author = {{Wikipedia, the free encyclopedia}},
	urldate = {2015-10-31},
	date = {2015-10},
	langid = {german},
	note = {Page Version {ID}: 146904140}
}

@book{wikipedia_the_free_encyclopedia_glfw_2015,
	title = {{GLFW}},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://en.wikipedia.org/w/index.php?title=GLFW},
	abstract = {{GLFW} is a lightweight utility library for use with {OpenGL}. It provides programmers with the ability to create and manage windows and {OpenGL} contexts, as well as handle joystick, keyboard and mouse input.},
	author = {{Wikipedia, the free encyclopedia}},
	urldate = {2015-10-31},
	date = {2015-10},
	langid = {english},
	note = {Page Version {ID}: 687716464}
}

@book{wikipedia_the_free_encyclopedia_opengl_2015-1,
	title = {{OpenGL} Extension Wrangler Library},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://en.wikipedia.org/w/index.php?title=OpenGL_Extension_Wrangler_Library},
	abstract = {The {OpenGL} Extension Wrangler Library ({GLEW}) is a cross-platform C/C++ library that helps in querying and loading {OpenGL} extensions. {GLEW} provides efficient run-time mechanisms for determining which {OpenGL} extensions are supported on the target platform. All {OpenGL} extensions are exposed in a single header file, which is machine-generated from the official extension list. {GLEW} is available for a variety of operating systems, including Windows, Linux, Mac {OS} X, {FreeBSD}, {IRIX}, and Solaris. {GLEW} is distributed under modified {BSD} licenses, and the header file generator is under the {GNU} {GPL}.},
	author = {{Wikipedia, the free encyclopedia}},
	urldate = {2015-10-31},
	date = {2015-09},
	langid = {english},
	note = {Page Version {ID}: 680716273}
}

@misc{osterwalder_sven_volume_2016,
	title = {Volume ray casting - basics \& principles},
	publisher = {Bern University of Applied Sciences},
	author = {Osterwalder, Sven},
	date = {2016-02-14}
}

@book{larman_applying_2004,
	location = {Upper Saddle River, {NJ}, {USA}},
	title = {Applying {UML} and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development (3rd Edition)},
	isbn = {978-0-13-148906-6},
	shorttitle = {Applying {UML} and Patterns},
	publisher = {Prentice Hall {PTR}},
	author = {Larman, Craig},
	date = {2004}
}

@book{jacobson_unified_1999,
	location = {Boston, {MA}, {USA}},
	title = {The Unified Software Development Process},
	isbn = {978-0-201-57169-1},
	publisher = {Addison-Wesley Longman Publishing Co., Inc.},
	author = {Jacobson, Ivar and Booch, Grady and Rumbaugh, James},
	date = {1999}
}

@book{kruchten_rational_2003,
	location = {Boston, {MA}, {USA}},
	edition = {3},
	title = {The Rational Unified Process: An Introduction},
	isbn = {978-0-321-19770-2},
	shorttitle = {The Rational Unified Process},
	publisher = {Addison-Wesley Longman Publishing Co., Inc.},
	author = {Kruchten, Philippe},
	date = {2003}
}

@online{evolus_pencil_2015,
	title = {Pencil Project},
	url = {http://pencil.evolus.vn/},
	author = {{Evolus}},
	urldate = {2016-08-02},
	date = {2015},
	file = {Home - Pencil Project:/Users/so/Library/Application Support/Zotero/Profiles/mewz8ehz.default/zotero/storage/Q38S5XAB/pencil.evolus.vn.html:text/html}
}

@inreference{wikipedia_foundation_qt_2016,
	title = {Qt (Bibliothek)},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://de.wikipedia.org/w/index.php?title=Qt_(Bibliothek)},
	abstract = {Qt (lies englisch cute [kjuːt]) ist eine C++-Klassenbibliothek für die plattformübergreifende Programmierung grafischer Benutzeroberflächen. Außerdem bietet Qt umfangreiche Funktionen zur Internationalisierung sowie Datenbankfunktionen und {XML}-Unterstützung an und ist für eine große Zahl an Betriebssystemen bzw. Grafikplattformen, wie X11 (Unix-Derivate), {OS} X, Windows, {iOS} und Android erhältlich. Qt wird insbesondere in den Bibliotheken der {KDE} Software Compilation 4 verwendet, welche gleichzeitig das prominenteste Vorzeigebeispiel der Klassenbibliothek darstellt.
Die Klassenbibliothek steht unter einer proprietären Lizenz, unter der {GNU} General Public License ({GPL}) und seit Version 4.5 zusätzlich unter der {GNU} Lesser General Public License ({LGPL}) zur Verfügung (siehe Duales Lizenzsystem).
Qt verwendet einen Präprozessor, genannt {MOC} (meta object compiler), womit C++ um Fähigkeiten bereichert wird, die im Sprachstandard nicht enthalten sind, beispielsweise Signale und Slots sowie Introspektion. Der so erzeugte Code folgt dem C++-Standard, so dass er mit handelsüblichen Compilern übersetzt werden kann. Es gibt auch Anbindungen für andere Programmiersprachen, die größtenteils von der Community bzw. von Drittanbietern zur Verfügung gestellt werden, unter anderem für Python ({PyQt}, {PySide}), Ruby ({QtRuby}), C\# (Qyoto-Projekt, {QtSharp}), Java (Qt Jambi), {PHP} ({PHP}-Qt), D ({QtD}), Haskell ({qtHaskell}), Perl ({PerlQt}), Pascal (Qt4Pas) und Ada ({QtAda}).},
	booktitle = {Wikipedia},
	publisher = {Wikipedia},
	author = {{Wikipedia Foundation}},
	urldate = {2016-07-26},
	date = {2016-07-17},
	langid = {german},
	note = {Page Version {ID}: 156236968},
	file = {Snapshot:/Users/so/Library/Application Support/Zotero/Profiles/mewz8ehz.default/zotero/storage/WC2FSM5E/index.html:text/html}
}

@online{the_eclipse_foundation_papyrus_2015,
	title = {Papyrus},
	url = {https://eclipse.org/papyrus/},
	titleaddon = {Papyrus},
	author = {{The Eclipse Foundation}},
	urldate = {2016-08-02},
	date = {2015}
}

@book{rumbaugh_unified_2004,
	title = {Unified Modeling Language Reference Manual, The (2Nd Edition)},
	isbn = {0-321-24562-8},
	publisher = {Pearson Higher Education},
	author = {Rumbaugh, James and Jacobson, Ivar and Booch, Grady},
	date = {2004}
}

@online{jakob_wenzel_wjakob/nanogui:_2016,
	title = {wjakob/nanogui: Minimalistic {GUI} library for {OpenGL}},
	url = {https://github.com/wjakob/nanogui},
	author = {{Jakob Wenzel}},
	urldate = {2016-08-04},
	date = {2016},
	file = {wjakob/nanogui\: Minimalistic GUI library for OpenGL:/Users/so/Library/Application Support/Zotero/Profiles/mewz8ehz.default/zotero/storage/I6ABWTS6/nanogui.html:text/html}
}

@online{benoit_jacob_eigen_2016,
	title = {Eigen},
	url = {http://eigen.tuxfamily.org/index.php?title=Main_Page},
	author = {{Benoît Jacob} and {Gaël Guennebaud}},
	urldate = {2016-08-04},
	date = {2016},
	file = {Eigen:/Users/so/Library/Application Support/Zotero/Profiles/mewz8ehz.default/zotero/storage/WKRKHU7K/index.html:text/html}
}

@online{opengl_foundation_rendering_2015,
	title = {Rendering Pipeline Overview - {OpenGL}.org},
	url = {https://www.opengl.org/wiki/Rendering_Pipeline},
	author = {{OpenGL Foundation}},
	urldate = {2016-08-04},
	date = {2015},
	file = {Rendering Pipeline Overview - OpenGL.org:/Users/so/Library/Application Support/Zotero/Profiles/mewz8ehz.default/zotero/storage/Z6JSRQRT/Rendering_Pipeline.html:text/html}
}

@online{opengl_foundation_fixed_2015,
	title = {Fixed Function Pipeline - {OpenGL}.org},
	url = {https://www.opengl.org/wiki/Fixed_Function_Pipeline},
	author = {{OpenGL Foundation}},
	urldate = {2016-08-04},
	date = {2015},
	file = {Fixed Function Pipeline - OpenGL.org:/Users/so/Library/Application Support/Zotero/Profiles/mewz8ehz.default/zotero/storage/2NAMME32/Fixed_Function_Pipeline.html:text/html}
}

@article{saito_comprehensible_1990,
	title = {Comprehensible Rendering of 3-D Shapes},
	volume = {24},
	issn = {0097-8930},
	url = {http://doi.acm.org/10.1145/97880.97901},
	doi = {10.1145/97880.97901},
	pages = {197--206},
	number = {4},
	journaltitle = {{SIGGRAPH} Comput. Graph.},
	author = {Saito, Takafumi and Takahashi, Tokiichiro},
	date = {1990-09}
}

@inproceedings{maignan_integer_2008,
	location = {Washington, {DC}, {USA}},
	title = {Integer Gradient for Cellular Automata: Principle and Examples},
	isbn = {978-0-7695-3553-1},
	url = {http://dx.doi.org/10.1109/SASOW.2008.52},
	doi = {10.1109/SASOW.2008.52},
	series = {{SASOW} '08},
	pages = {321--325},
	booktitle = {Proceedings of the 2008 Second {IEEE} International Conference on Self-Adaptive and Self-Organizing Systems Workshops},
	publisher = {{IEEE} Computer Society},
	author = {Maignan, Luidnel and Gruau, Frédéric},
	date = {2008}
}

@book{brentzen_guide_2012,
	title = {Guide to Computational Geometry Processing: Foundations, Algorithms, and Methods},
	isbn = {1-4471-4074-5 978-1-4471-4074-0},
	publisher = {Springer Publishing Company, Incorporated},
	author = {Brentzen, Jakob Andreas and Gravesen, Jens and Anton, Franois and Aans, Henrik},
	date = {2012}
}

@misc{wikipedia_foundation_demoszene_2015,
	title = {Demoszene},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Demoszene},
	abstract = {Die Demoszene entwickelte sich unter Anhängern der Computerszene in den 1980er-Jahren während der Blütezeit der 8-Bit-Systeme. Ihre Mitglieder, die häufig Demoszener oder einfach Szener genannt werden, erzeugen mit Computerprogrammen auf Rechnern so genannte Demos – Digitale Kunst, meist in Form von musikalisch unterlegten Echtzeit-Animationen.
Mittlerweile ist die Demoszene zu einem etablierten Kreis innerhalb der Computerszene geworden; auf verschiedenen Veranstaltungen stellen sie ihre Werke auf Großleinwänden vor. Langsam aber sicher bahnt sich die Demoszene auch einen Weg in die Museen und auf die progressiven Film- und Videofestivals. Heute wird vorwiegend auf herkömmlichen PCs programmiert, aber auch Dutzende anderer Plattformen – von der Xbox bis zum Game Boy – halten für die Programmierkünste her. Im deutschsprachigen Raum werden für die Produkte dieser Kunstform die Demo und das Demo gleichermaßen verwendet.
Die Demoszene ist im Wesentlichen auf Europa beschränkt; in den USA und in Asien existieren nur relativ kleine Ableger.},
	language = {de},
	urldate = {2016-01-09},
	journal = {Wikipedia},
	author = {{Wikipedia Foundation}},
	month = dec,
	year = {2015},
	note = {Page Version ID: 149578258},
	file = {Snapshot:/home/so/.zotero/zotero/d79e17nl.default/zotero/storage/MMD4Q5R6/index.html:text/html}
}
